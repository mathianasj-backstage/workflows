name: build and deploy a quarkus application
on:
  workflow_call:
    inputs: 
      app:
        description: 'the name of the app this repo belongs to'
        required: true
        type: string
      component:
        description: 'the name of the component this repo belongs to'
        required: true
        type: string

jobs:
#   java-build:
#     runs-on: [self-hosted]
#     steps:
#     - name: set repo name
#       shell: bash
#       run: | 
#         echo "REPOSITORY_NAME=$(basename $GITHUB_REPOSITORY)" >> $GITHUB_ENV       

#     - name: checkout code
#       uses: actions/checkout@v3

#     - name: Set up JDK 11
#       uses: actions/setup-java@v1
#       with:
#         java-version: 11

#     - name: Cache Maven packages
#       uses: actions/cache@v2
#       with:
#         path: ~/.m2
#         key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#         restore-keys: ${{ runner.os }}-m2        

#     - name: Build and analyze
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         SONAR_TOKEN: ${{ env.SONAR_TOKEN }}
#         SONAR_HOST_URL: http://sonarqube.sonarqube.svc:9000
#       run: ./mvnw -B verify 

#     - name: Build
#       run: |
#         ./mvnw -B -DskipTests clean package --file pom.xml

# TODO change this into an s2i build
  image-build:
    runs-on: [self-hosted]
#     needs: java-build
    steps:
    - name: set repo name
      shell: bash
      run: | 
        echo "REPOSITORY_NAME=$(basename $GITHUB_REPOSITORY)" >> $GITHUB_ENV         

    # - name: set ocp token
    #   shell: bash
    #   run: | 
    #     echo "KUBERNETES_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)" >> $GITHUB_ENV
    #     echo "KUBERNETES_CA=$(cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt)" >> $GITHUB_ENV
    
    - name: Install CLI tools from OpenShift Mirror
      uses: redhat-actions/openshift-tools-installer@v1
      with:
        oc: "4"
        tkn: "0.24.0"
        helm: "3.6.2"
        skip_cache: true
                
    - name: checkout code
      uses: actions/checkout@v3

    # - name: kubernetes login
    #   uses: redhat-actions/oc-login@v1
    #   with:
    #     # URL to your OpenShift cluster.
    #     # Refer to Step 2.
    #     openshift_server_url: https://kubernetes.default.svc:443

    #     # Authentication Token. Can use username and password instead.
    #     # Refer to Step 3.
    #     openshift_token: ${{ env.KUBERNETES_TOKEN }}

    #     certificate_authority_data: ${{ env.KUBERNETES_CA }}

    #     # Optional - this sets your Kubernetes context's current namespace after logging in.
    #     namespace: ${{ inputs.app }}-build       


    - name: start and follow the build
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      shell: bash
      run: | 
        oc create secret generic github-pat-secret -n ${{ inputs.app }}-build --type=kubernetes.io/basic-auth --from-literal=username="" --from-literal=password=$GITHUB_TOKEN
        oc annotate -n ${{ inputs.app }}-build secret github-pat-secret "tekton.dev/git-0=https://github.com"
        tkn pipeline start --use-param-defaults -n ${{ inputs.app }}-build ${{ inputs.component }}-quarkus-pipeline -w name=source,claimName=${{ inputs.app }} --showlog
